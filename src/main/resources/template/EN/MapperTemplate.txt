package @mapperPackage@;

import @moExamplePackage@.@MoName@Example;
import @moPackage@.@MoName@Mo;
import org.apache.ibatis.annotations.Param;
import @MapperAnnotationPackage@;

import java.util.List;

/**
 * @MoName@Mo Database Mapper
 *
 * @author @d8Author@
 */
@MapperAnnotation@
public interface @MoName@Mapper {

    /**
     * Query list by criteria, supporting all conditions for querying a single table
     *
     * @param @uncapitallizeMoName@Example
     * @return
     */
    List<@MoName@Mo> selectByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * Batch update non-null fields by ID for multi-records
     *
     * @param @uncapitallizeMoName@MoList
     * @return
     */
    int updateBatchByPrimaryKeySelective(List<@MoName@Mo> @uncapitallizeMoName@MoList);

    /**
     * Update non-null fields by ID for a single record
     *
     * @param @uncapitallizeMoName@Mo
     * @param @uncapitallizeMoName@Example
     * @return
     */
    int updateByExampleSelective(@Param("record") @MoName@Mo @uncapitallizeMoName@Mo, @Param("example") @MoName@Example @uncapitallizeMoName@Example);

    /**
     * Delete a single record by condition
     *
     * @param @uncapitallizeMoName@Example
     * @return
     */
    int deleteByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * Statistical records by query conditions
     *
     * @param @uncapitallizeMoName@Example
     * @return Number of records
     */
    int countByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * Add a single record, and set the ID for the input Mo parameter
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    int insertWithId(@MoName@Mo @uncapitallizeMoName@Mo);

    /**
     * Batch add records, and set the ID for the input MoList parameters
     * Attention: `id` | `createTime` | `updateTime` fields will be ignored cause these should according to the Database
     *
     * @param @uncapitallizeMoName@MoList
     * @return
     */
    int insertBatchWithId(List<@MoName@Mo> @uncapitallizeMoName@MoList);

    /**
     * @MoName@ query list
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    List<@MoName@Mo> query@MoName@MoList(@MoName@Mo @uncapitallizeMoName@Mo);

    /**
     * Query just one record by ID
     *
     * @param id
     * @return
     */
    <T extends Number> @MoName@Mo selectByPrimaryKey(T id);

    /**
     * Update non-null fields by ID for a single record
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    int updateByPrimaryKeySelective(@MoName@Mo @uncapitallizeMoName@Mo);

    /**
     * Delete a record by ID
     *
     * @param id
     * @return
     */
    <T extends Number> int deleteByPrimaryKey(T id);

    /**
     * Query just one record by criteria, supporting all conditions for querying a single table
     *
     * @param @uncapitallizeMoName@Example
     * @return
     */
    @MoName@Mo selectOneByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * Add a single record with nonNull field, and set the ID for the input Mo parameter
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    int insertSelectiveWithId(@MoName@Mo @uncapitallizeMoName@Mo);

}