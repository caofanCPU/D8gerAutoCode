package @mapperPackage@;

import @moExamplePackage@.@MoName@Example;
import @moPackage@.@MoName@Mo;
import org.apache.ibatis.annotations.Param;
import @MapperAnnotationPackage@;

import java.util.List;

/**
 * @MoName@Mo对应的Mapper
 *
 * @author @d8Author@
 */
@MapperAnnotation@
public interface @MoName@Mapper {

    /**
     * 根据条件查询列表
     *
     * @param @uncapitallizeMoName@Example
     * @return
     */
    List<@MoName@Mo> selectByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * 批量更新, 根据主键更新非null字段
     *
     * @param @uncapitallizeMoName@MoList
     * @return
     */
    int updateBatchByPrimaryKeySelective(List<@MoName@Mo> @uncapitallizeMoName@MoList);

    /**
     * 根据条件更新非null字段
     *
     * @param @uncapitallizeMoName@Mo
     * @param @uncapitallizeMoName@Example
     * @return
     */
    int updateByExampleSelective(@Param("record") @MoName@Mo @uncapitallizeMoName@Mo, @Param("example") @MoName@Example @uncapitallizeMoName@Example);

    /**
     * 根据条件删除记录
     *
     * @param @uncapitallizeMoName@Example
     * @return
     */
    int deleteByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * 根据条件统计记录
     *
     * @param @uncapitallizeMoName@Example
     * @return 记录条数
     */
    int countByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * 增加单条记录, 并为入参设置ID
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    int insertWithId(@MoName@Mo @uncapitallizeMoName@Mo);

    /**
     * 批量增加记录, 并为入参设置ID
     *
     * @param @uncapitallizeMoName@MoList
     * @return
     */
    int insertBatchWithId(List<@MoName@Mo> @uncapitallizeMoName@MoList);

    /**
     * @MoName@列表查询
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    List<@MoName@Mo> query@MoName@MoList(@MoName@Mo @uncapitallizeMoName@Mo);

    /**
     * 根据ID查询对象
     *
     * @param id
     * @return
     */
    <T extends Number> @MoName@Mo selectByPrimaryKey(T id);

    /**
     * 根据主键只更新非null字段
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    int updateByPrimaryKeySelective(@MoName@Mo @uncapitallizeMoName@Mo);

    /**
     * 根据ID删除记录
     *
     * @param id
     * @return
     */
    <T extends Number> int deleteByPrimaryKey(T id);

    /**
     * 根据条件查询单个对象
     *
     * @param @uncapitallizeMoName@Example
     * @return
     */
    @MoName@Mo selectOneByExample(@MoName@Example @uncapitallizeMoName@Example);

    /**
     * 增加单条非空字段记录, 并为入参设置ID
     *
     * @param @uncapitallizeMoName@Mo
     * @return
     */
    int insertSelectiveWithId(@MoName@Mo @uncapitallizeMoName@Mo);

}